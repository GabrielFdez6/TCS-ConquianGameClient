//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConquiánCliente.ServicePasswordRecovery {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicePasswordRecovery.IPasswordRecovery")]
    public interface IPasswordRecovery {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordRecovery/RequestPasswordRecovery", ReplyAction="http://tempuri.org/IPasswordRecovery/RequestPasswordRecoveryResponse")]
        bool RequestPasswordRecovery(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordRecovery/RequestPasswordRecovery", ReplyAction="http://tempuri.org/IPasswordRecovery/RequestPasswordRecoveryResponse")]
        System.Threading.Tasks.Task<bool> RequestPasswordRecoveryAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordRecovery/ValidateRecoveryToken", ReplyAction="http://tempuri.org/IPasswordRecovery/ValidateRecoveryTokenResponse")]
        bool ValidateRecoveryToken(string email, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordRecovery/ValidateRecoveryToken", ReplyAction="http://tempuri.org/IPasswordRecovery/ValidateRecoveryTokenResponse")]
        System.Threading.Tasks.Task<bool> ValidateRecoveryTokenAsync(string email, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordRecovery/ResetPassword", ReplyAction="http://tempuri.org/IPasswordRecovery/ResetPasswordResponse")]
        bool ResetPassword(string email, string token, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordRecovery/ResetPassword", ReplyAction="http://tempuri.org/IPasswordRecovery/ResetPasswordResponse")]
        System.Threading.Tasks.Task<bool> ResetPasswordAsync(string email, string token, string newPassword);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPasswordRecoveryChannel : ConquiánCliente.ServicePasswordRecovery.IPasswordRecovery, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PasswordRecoveryClient : System.ServiceModel.ClientBase<ConquiánCliente.ServicePasswordRecovery.IPasswordRecovery>, ConquiánCliente.ServicePasswordRecovery.IPasswordRecovery {
        
        public PasswordRecoveryClient() {
        }
        
        public PasswordRecoveryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PasswordRecoveryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PasswordRecoveryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PasswordRecoveryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool RequestPasswordRecovery(string email) {
            return base.Channel.RequestPasswordRecovery(email);
        }
        
        public System.Threading.Tasks.Task<bool> RequestPasswordRecoveryAsync(string email) {
            return base.Channel.RequestPasswordRecoveryAsync(email);
        }
        
        public bool ValidateRecoveryToken(string email, string token) {
            return base.Channel.ValidateRecoveryToken(email, token);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateRecoveryTokenAsync(string email, string token) {
            return base.Channel.ValidateRecoveryTokenAsync(email, token);
        }
        
        public bool ResetPassword(string email, string token, string newPassword) {
            return base.Channel.ResetPassword(email, token, newPassword);
        }
        
        public System.Threading.Tasks.Task<bool> ResetPasswordAsync(string email, string token, string newPassword) {
            return base.Channel.ResetPasswordAsync(email, token, newPassword);
        }
    }
}
